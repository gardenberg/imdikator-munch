View(spraak)
spraak <- read.csv("~/Ifakta/Datasett/prosjekt tolkebehov/fra NTREG 1-desember-2016 - frmLandSpraak.csv", sep=";", stringsAsFactors=FALSE)
View(spraak)
befolkning <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 4-2016 fra SSB/9_befolkning_opprinnelsesland_botid/tilrettelagt for tolk/befolkning_opprinnelsesland_botid.csv", stringsAsFactors=FALSE)
View(befolkning)
ssb_internasjonale_landkoder <- read.csv("~/R/imdikator-munch/parameters/ssb_internasjonale_landkoder.csv", sep=";", stringsAsFactors=FALSE)
View(ssb_internasjonale_landkoder)
ssb_internasjonale_landkoder <- read.csv("~/R/imdikator-munch/parameters/ssb_internasjonale_landkoder.csv", sep=";", stringsAsFactors=FALSE)
apply(ssb_internasjonale_landkoder,2, function(x){levels(as.factor(x))})
ssb_internasjonale_landkoder = filter(ssb_internasjonale_landkoder,Nivånr.=="3")
apply(ssb_internasjonale_landkoder,2, function(x){levels(as.factor(x))})
df = full_join(befolkning,ssb_internasjonale_landkoder,by=c("landbakgrunn"="Kode"))
befolkning <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 4-2016 fra SSB/9_befolkning_opprinnelsesland_botid/tilrettelagt for tolk/befolkning_opprinnelsesland_botid.csv", stringsAsFactors=FALSE,colClasses = "character")
ssb_internasjonale_landkoder <- read.csv("~/R/imdikator-munch/parameters/ssb_internasjonale_landkoder.csv", sep=";", stringsAsFactors=FALSE,colClasses = "character")
df = full_join(befolkning,ssb_internasjonale_landkoder,by=c("landbakgrunn"="Kode"))
View(df)
ssb_internasjonale_landkoder = select(ssb_internasjonale_landkoder,Kode,Tittel,Nivånr.)
df = full_join(befolkning,ssb_internasjonale_landkoder,by=c("landbakgrunn"="Kode"))
View(df)
t = full_join(df,spraak,by=c("Tittel"="Land"))
View(t)
apply(t,2, function(x){levels(as.factor(x))})
apply(t,2, function(x){nlevels(as.factor(x))})
t = filter(t,enhet=="personer","kommune_nr"!="NULL")
t = select(t,kommune_nr,botid_3,landbakgrunn,Tittel,Sprak,tabellvariabel)
View(t)
t = full_join(df,spraak,by=c("Tittel"="Land"))
t = filter(t,enhet=="personer",kommune_nr!="NULL")
t = select(t,kommune_nr,botid_3,landbakgrunn,Tittel,Sprak,tabellvariabel)
View(t)
names(t)
names(t)[3:4]
names(t)[3:4] = c("landbakgrunn_kode","landbakgrunn_navn")
names(t)
t = full_join(df,spraak,by=c("Tittel"="Land"))
t = filter(t,enhet=="personer",kommune_nr!="NULL",botid_3="0_4")
t = select(t,kommune_nr,botid_3,landbakgrunn,Tittel,Sprak,tabellvariabel)
names(t)[3:4] = c("landbakgrunn_kode","landbakgrunn_navn")
t = full_join(df,spraak,by=c("Tittel"="Land"))
t = filter(t,enhet=="personer",kommune_nr!="NULL",botid_3=="0_4")
t = select(t,kommune_nr,botid_3,landbakgrunn,Tittel,Sprak,tabellvariabel)
names(t)[3:4] = c("landbakgrunn_kode","landbakgrunn_navn")
View(t)
write.csv2(t,"test/befolkning_sprak_landbakgrunn", row.names=F)
write.csv2(t,"test/befolkning_sprak_landbakgrunn.csv", row.names=F)
library(reshape)
t = full_join(df,spraak,by=c("Tittel"="Land"))
data = melt.data.frame(t,measure.vars="tabellvariabel",na.rm=F)
data_sprak = cast(data,kommune_nr~variable+Sprak,fun.aggregate=sum,na.rm=T,add.missing=T)
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/311_grunnskolepoeng/"
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/311_grunnskolepoeng/"
temp = list.files(path=paste0(sti,"leveranse_3/"),pattern="*.csv")
df <- read.csv(paste0(sti,"leveranse_3/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",sep=",")
View(df)
df <- read.csv(paste0(sti,"leveranse_3/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",sep=";")
tabell_navn=df$tabell_navn[1]
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))>1){geonivå="alle"}
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))==1){geonivå=strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T)[[1]][[1]]}
kombinasjoner=3*5*2
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
if(geonivå=="alle"){nrow(df)==(20*kombinasjoner+18*kombinasjoner+428*kombinasjoner+83*kombinasjoner)}
if(t=="alle"){t=filter(df,fylke_nr=="00")}
if(geonivå=="alle"){t=filter(df,fylke_nr=="00")}
View(t)
write.csv(df,paste0(sti,tabell_navn".csv"), row.names=F)
write.csv(df,paste0(sti,tabell_navn,".csv"), row.names=F)
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/312_grunnskolepoeng_innvandrere/"
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/312_grunnskolepoeng_innvandrere/"
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/312_grunnskolepoeng_innvandrere/"
temp = list.files(path=paste0(sti,"leveranse_3/"),pattern="*.csv")
temp = list.files(path=paste0(sti,"leveranse_3/"),pattern="*.csv")
df <- read.csv(paste0(sti,"leveranse_3/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",sep=";")
tabell_navn=df$tabell_navn[1]
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))>1){geonivå="alle"}
kombinasjoner=3*3*3*2
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
if(geonivå=="alle"){nrow(df)==(20*kombinasjoner+18*kombinasjoner+428*kombinasjoner+83*kombinasjoner)}
if(geonivå=="alle"){t=filter(df,fylke_nr=="00")}
write.csv(df,paste0(sti,tabell_navn,".csv"), row.names=F)
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/311_grunnskolepoeng/"
temp = list.files(path=paste0(sti,"leveranse_3/"),pattern="*.csv")
df <- read.csv(paste0(sti,"leveranse_3/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",sep=";")
tabell_navn=df$tabell_navn[1]
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))>1){geonivå="alle"}
if(geonivå=="alle"){t=filter(df,fylke_nr=="00")}
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/312_grunnskolepoeng_innvandrere/"
temp = list.files(path=paste0(sti,"leveranse_3/"),pattern="*.csv")
df <- read.csv(paste0(sti,"leveranse_3/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",sep=";")
tabell_navn=df$tabell_navn[1]
if(geonivå=="alle"){t=filter(df,fylke_nr=="00")}
df <- read.csv("~/Ifakta/Datasett/Azure-backup 6-desember-2016/befolkning_hovedgruppe.csv", row.names=NULL, stringsAsFactors=FALSE,colClasses="character")
df <- read.csv("~/Ifakta/Datasett/Azure-backup 6-desember-2016/befolkning_hovedgruppe.csv", row.names=NULL, stringsAsFactors=FALSE,colClasses="character",fileEncoding = "UTF-8-BOM")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
df$fylke_nr[df$fylke_nr=="0"]
df$fylke_nr[nchar(df$fylke_nr)==1]
df$fylke_nr[nchar(df$fylke_nr)==1] = paste0("0",df$fylke_nr[nchar(df$fylke_nr)==1])
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
?write.csv
write.csv(df,"~/Ifakta/Datasett/Azure-backup 6-desember-2016/bugfix/befolkning_hovedgruppe.csv", row.names=F,fileEncoding = "UTF-8")
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/311_grunnskolepoeng/"
temp = list.files(path=paste0(sti,"leveranse_3/"),pattern="*.csv")
temp = list.files(path=paste0(sti,"leveranse_4/"),pattern="*.csv")
df <- read.csv(paste0(sti,"leveranse_4/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",sep=";")
df <- read.csv(paste0(sti,"leveranse_4/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character")
tabell_navn=df$tabell_navn[1]
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))>1){geonivå="alle"}
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))==1){geonivå=strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T)[[1]][[1]]}
kombinasjoner=3*5*2
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
if(geonivå=="alle"){nrow(df)==(20*kombinasjoner+18*kombinasjoner+428*kombinasjoner+83*kombinasjoner)}
if(geonivå=="alle"){nrow(df)==(21*kombinasjoner+18*kombinasjoner+428*kombinasjoner+84*kombinasjoner)}
if(geonivå=="alle"){t=filter(df,fylke_nr=="00")}
library(tidyr)
library(dplyr)
if(geonivå=="alle"){t=filter(df,fylke_nr=="00")}
View(t)
apply(subset(df,select=tabellvariabel),2, function(x){levels(as.factor(x))})
write.csv(df,paste0(sti,tabell_navn,".csv"), row.names=F)
write.csv(df,paste0(sti,tabell_navn,".csv"), row.names=F,fileEncoding = "UTF-8")
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/312_grunnskolepoeng_innvandrere/"
sti = "~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 6-2016 fra SSB/312_grunnskolepoeng_innvandrere/"
temp = list.files(path=paste0(sti,"leveranse_4/"),pattern="*.csv")
df <- read.csv(paste0(sti,"leveranse_4/",temp[1]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character")
tabell_navn=df$tabell_navn[1]
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))>1){geonivå="alle"}
if(length(strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T))==1){geonivå=strsplit(names(df)[grep("_nr",names(df))],"_",fixed=T)[[1]][[1]]}
kombinasjoner=3*3*3*2
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
if(geonivå=="alle"){nrow(df)==(21*kombinasjoner+18*kombinasjoner+428*kombinasjoner+84*kombinasjoner)}
if(geonivå=="alle"){t=filter(df,fylke_nr=="00")}
write.csv(df,paste0(sti,tabell_navn,".csv"), row.names=F,fileEncoding = "UTF-8")
if(geonivå=="alle"){t=filter(df,fylke_nr!="NULL",kjonn=="alle",vreg_3=="alle",invalder_3=="alle",enhet=="personer")}
library(dplyr)
sti = "~/Ifakta/Datasett/Azure-backup 6-desember-2016/"
temp = list.files(sti,pattern="*.csv")
navn_temp = ""
navn_tabell = ""
n = 1:length(temp)
i=1
df = data.frame()
state_fleretabellnavn = 0
state_duplikater1 = 0
state_duplikater2 = 0
t = strsplit(temp,"-",fixed=T)
for(i in n){
#leser inn  fil
df_temp <- read.csv(paste0(sti,temp[i]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",fileEncoding = "UTF-8-BOM")
#henter tabell_navn
if(nlevels(as.factor(df_temp$tabell_navn))>1){
#SJEKK: bare ett tabell_navn?
state_fleretabellnavn = state_fleretabellnavn+1
}
navn_temp = df_temp$tabell_navn[1]
#sjekker om tabell_navn er likt forrige innleste tabell svakhet - hvis tabell_navn ikke ligger alfabetisk...
if(i==1){
df = df_temp
navn_tabell = navn_temp
}
if(navn_temp==navn_tabell&i>1){
#hvis ja: merge med bind_rows
df = bind_rows(df,df_temp)
nlevels(as.factor(df$tabell_navn))==1
}
if(navn_temp!=navn_tabell&i>1){
#hvis ulik: gjør NA til "NULL", lagre fila, lagre tabellnavnet. repeat
sum(is.na(df))
df[is.na(df)]="NULL"
#Alle NA satt til "NULL"
sum(is.na(df))==0
#håndterer evt. duplikater - fjerner helt identiske rader
if(nrow(df)!=nrow(distinct(df))){
df=distinct(df)
state_duplikater1 = state_duplikater1+1
}
#hvis det er helt identiske rader med ulik tabellvariabel må jeg se nærmere på det
if(nrow(df)!=nrow(distinct(select(df,-tabellvariabel)))){
#duplikater
state_duplikater2 = 1
break
}
write.csv(df,paste0(sti,"merged/",navn_tabell,".csv"), row.names=F)
df = df_temp
navn_tabell=navn_temp
}
if(i==329){
#hvis ulik: gjør NA til "NULL", lagre fila, lagre tabellnavnet. repeat
sum(is.na(df))
df[is.na(df)]="NULL"
#Alle NA satt til "NULL"
sum(is.na(df))==0
#håndterer evt. duplikater - fjerner helt identiske rader
if(nrow(df)!=nrow(distinct(df))){
df=distinct(df)
state_duplikater1 = state_duplikater1+1
}
#hvis det er helt identiske rader med ulik tabellvariabel må jeg se nærmere på det
if(nrow(df)!=nrow(distinct(select(df,-tabellvariabel)))){
#duplikater
state_duplikater2 = 1
break
}
write.csv(df,paste0(sti,"merged/",navn_tabell,".csv"), row.names=F)
df = df_temp
navn_tabell=navn_temp
}
}
for(i in n){
#leser inn  fil
df_temp <- read.csv(paste0(sti,temp[i]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",fileEncoding = "UTF-8-BOM")
#henter tabell_navn
if(nlevels(as.factor(df_temp$tabell_navn))>1){
#SJEKK: bare ett tabell_navn?
state_fleretabellnavn = state_fleretabellnavn+1
}
navn_temp = df_temp$tabell_navn[1]
#sjekker om tabell_navn er likt forrige innleste tabell svakhet - hvis tabell_navn ikke ligger alfabetisk...
if(i==1){
df = df_temp
navn_tabell = navn_temp
}
if(navn_temp==navn_tabell&i>1){
#hvis ja: merge med bind_rows
df = bind_rows(df,df_temp)
nlevels(as.factor(df$tabell_navn))==1
}
if(navn_temp!=navn_tabell&i>1){
#hvis ulik: gjør NA til "NULL", lagre fila, lagre tabellnavnet. repeat
sum(is.na(df))
df[is.na(df)]="NULL"
#Alle NA satt til "NULL"
sum(is.na(df))==0
#håndterer evt. duplikater - fjerner helt identiske rader
if(nrow(df)!=nrow(distinct(df))){
df=distinct(df)
state_duplikater1 = state_duplikater1+1
}
#hvis det er helt identiske rader med ulik tabellvariabel må jeg se nærmere på det
if(nrow(df)!=nrow(distinct(select(df,-tabellvariabel)))){
#duplikater
state_duplikater2 = 1
break
}
write.csv(df,paste0(sti,"merged/",navn_tabell,".csv"), row.names=F)
df = df_temp
navn_tabell=navn_temp
}
if(i==329){
#hvis ulik: gjør NA til "NULL", lagre fila, lagre tabellnavnet. repeat
sum(is.na(df))
df[is.na(df)]="NULL"
#Alle NA satt til "NULL"
sum(is.na(df))==0
#håndterer evt. duplikater - fjerner helt identiske rader
if(nrow(df)!=nrow(distinct(df))){
df=distinct(df)
state_duplikater1 = state_duplikater1+1
}
#hvis det er helt identiske rader med ulik tabellvariabel må jeg se nærmere på det
if(nrow(df)!=nrow(distinct(select(df,-tabellvariabel)))){
#duplikater
state_duplikater2 = 1
break
}
write.csv(df,paste0(sti,"merged/",navn_tabell,".csv"), row.names=F)
df = df_temp
navn_tabell=navn_temp
}
}
df <- read.csv(paste0(sti,"befolkning_botid.csv"), row.names=NULL, stringsAsFactors=FALSE,colClasses="character")
names(df)[1]="aar"
df = filter(df,enhet!="navn")
df = select(df,-Bydel,-Fylke)
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
write.csv(df,paste0(sti,"befolkning_botid.csv"), row.names=F,fileEncoding = "UTF-8")
#befolkning_flytting
df <- read.csv(paste0(sti,"befolkning_flytting.csv"), row.names=NULL, stringsAsFactors=FALSE,colClasses="character")
#må rydde litt
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
names(df)[1]="tabell_navn"
df = filter(df,enhet!="navn")
df = select(df,-Fylke)
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
write.csv(df,paste0(sti,"befolkning_flytting.csv"), row.names=F,fileEncoding = "UTF-8")
df <- read.csv(paste0(sti,"flyktning_botid_flytting.csv"), row.names=NULL, stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
names(df)[1]="tabell_navn"
df = filter(df,enhet!="navn")
df = select(df,-Fylke)
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
write.csv(df,paste0(sti,"flyktning_botid_flytting.csv"), row.names=F,fileEncoding = "UTF-8")
sti = "~/Ifakta/Datasett/Azure-backup 6-desember-2016/"
temp = list.files(sti,pattern="*.csv")
navn_temp = ""
navn_tabell = ""
n = 1:length(temp)
i=1
df = data.frame()
state_fleretabellnavn = 0
state_duplikater1 = 0
state_duplikater2 = 0
t = strsplit(temp,"-",fixed=T)
t[[]]
#viktig at loopen looper over en sekvens/vektor, ikke bare ett tall - altså i in 1:length, ikke i in length
#første forsøk feilet på grunn av ett eller annet som gir gigatabell - 36 millioner observasjoner/1.5GB. problem med full_join, erstattet med bind_rows
#andre forsøk nullstilte ikke df for ny tabell. fikset
#tredje forsøk håndterte advarsler først manuelt, og la til håndtering/fjerning av duplikater (og break hvis duplikater med ulik tabellvariabel)
#fjerde versjon har state på om loopen finner tabeller med flere tabellnavn eller duplikater
#femte versjon får med siste df også.
#framover: er det mulig å skrive en innholdstest?
# test 1: lik lengde?
# test 2: likt innhold?
#LOOP
for(i in n){
#leser inn  fil
df_temp <- read.csv(paste0(sti,temp[i]), row.names=NULL, stringsAsFactors=FALSE,colClasses="character",fileEncoding = "UTF-8-BOM")
#henter tabell_navn
if(nlevels(as.factor(df_temp$tabell_navn))>1){
#SJEKK: bare ett tabell_navn?
state_fleretabellnavn = state_fleretabellnavn+1
}
navn_temp = df_temp$tabell_navn[1]
#sjekker om tabell_navn er likt forrige innleste tabell svakhet - hvis tabell_navn ikke ligger alfabetisk...
if(i==1){
df = df_temp
navn_tabell = navn_temp
}
if(navn_temp==navn_tabell&i>1){
#hvis ja: merge med bind_rows
df = bind_rows(df,df_temp)
nlevels(as.factor(df$tabell_navn))==1
}
if(navn_temp!=navn_tabell&i>1){
#hvis ulik: gjør NA til "NULL", lagre fila, lagre tabellnavnet. repeat
sum(is.na(df))
df[is.na(df)]="NULL"
#Alle NA satt til "NULL"
sum(is.na(df))==0
#håndterer evt. duplikater - fjerner helt identiske rader
if(nrow(df)!=nrow(distinct(df))){
df=distinct(df)
state_duplikater1 = state_duplikater1+1
}
#hvis det er helt identiske rader med ulik tabellvariabel må jeg se nærmere på det
if(nrow(df)!=nrow(distinct(select(df,-tabellvariabel)))){
#duplikater
state_duplikater2 = 1
break
}
write.csv(df,paste0(sti,"merged/",navn_tabell,".csv"), row.names=F)
df = df_temp
navn_tabell=navn_temp
}
if(i==329){
#hvis ulik: gjør NA til "NULL", lagre fila, lagre tabellnavnet. repeat
sum(is.na(df))
df[is.na(df)]="NULL"
#Alle NA satt til "NULL"
sum(is.na(df))==0
#håndterer evt. duplikater - fjerner helt identiske rader
if(nrow(df)!=nrow(distinct(df))){
df=distinct(df)
state_duplikater1 = state_duplikater1+1
}
#hvis det er helt identiske rader med ulik tabellvariabel må jeg se nærmere på det
if(nrow(df)!=nrow(distinct(select(df,-tabellvariabel)))){
#duplikater
state_duplikater2 = 1
break
}
write.csv(df,paste0(sti,"merged/",navn_tabell,".csv"), row.names=F)
df = df_temp
navn_tabell=navn_temp
}
}
df <- read.csv("~/Ifakta/Datasett/Azure-backup 6-desember-2016/merged/befolkning_opprinnelsesland.csv", row.names=NULL, stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(df,2, function(x){nlevels(as.factor(x))})
t = filter(df,landbakgrunn=="1")
View(t)
df = filter(df,landbakgrunn!="1")
write.csv(df,"~/Ifakta/Datasett/Azure-backup 6-desember-2016/bugfix/befolkning_opprinnelsesland.csv", row.names=F,fileEncoding = "UTF-8")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
View(df)
options("scipen"=999)
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_25_633a.csv", stringsAsFactors=FALSE,colClasses="character")
library(dplyr)
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==429*9*2
t = subset(df,kommune_nr=='0000'&enhet=='personer')
View(t)
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_26_633b.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==18*9*2
nrow(df)==19*9*2
t = subset(df,bydel_nr=='030101'&enhet=='personer')
View(t)
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_27_633c.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
t = subset(df,fylke_nr=='00'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_28_633d.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
t = subset(df,naringsregion_nr=='01'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_29_64a.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==(429*1*3*2)+(429*2*1*2)
nrow(df)==(429*3*3*2)
t = subset(df,kommune_nr=='0000'&enhet=='personer')
t = subset(df,kommune_nr=='0000'&enhet=='prosent')
t = subset(df,kommune_nr=='0000'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_30_64b.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==(18*3*3*2)
nrow(df)==(19*3*3*2)
t = subset(df,bydel_nr=='030101'&enhet=='personer')
t = subset(df,innvkat_3=="alle"&vreg_3=="alle"&enhet=='personer')
t = subset(df,innvkat_3=="innvandrere"&vreg_3=="alle"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_31_64c.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==(20*3*3*2)
t = subset(df,fylke_nr=='00'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_32_64d.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==(83*3*3*2)
t = subset(df,naringsregion_nr=='01'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_33_65a.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==429*3*3*3*2
t = subset(df,kommune_nr=='0000'&kjonn=="alle"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_34_65b.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
t = subset(df,innvkat_3=="innvandrere"&vreg_3=="alle"&kjonn=="alle"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_35_65c.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==20*3*3*3*2
t = subset(df,fylke_nr=='00'&innvkat_3=="innvandrere"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_36_65d.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==83*3*3*3*2
t = subset(df,naringsregion_nr=='01'&innvkat_3=="innvandrere"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_37_66a.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==429*3*3*3*2
t = subset(df,kommune_nr=='0000'&innvkat_3=="innvandrere"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_38_66b.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==19*3*3*3*2
t = subset(df,bydel_nr=='00'&innvkat_3=="innvandrere"&enhet=='personer')
t = subset(df,innvkat_3=="innvandrere"&aldersinndeling_etter_grskole=="16_25"&kjonn=="alle"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_39_66c.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==20*3*3*3*2
t = subset(df,fylke_nr=='00'&innvkat_3=="innvandrere"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016/sysselsetting/DIAGNOSE/Tab_40_66d.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016/sysselsetting/DIAGNOSE/Tab_40_66d.csv", stringsAsFactors=FALSE,colClasses="character")
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_39_66c.csv", stringsAsFactors=FALSE,colClasses="character")
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016/sysselsetting/DIAGNOSE/Tab_40_66d.csv", stringsAsFactors=FALSE,colClasses="character")
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_40_66d.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==83*3*3*3*2
t = subset(df,naringsregion_nr=='01'&innvkat_3=="innvandrere"&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_25_633a.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
nrow(df)==429*9*2
t = subset(df,kommune_nr=='0000'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_26_633b.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==19*9*2
t = subset(df,bydel_nr=='00'&enhet=='personer')
t = subset(df,bydel_nr=='030101'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_27_633c.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==20*9*2
t = subset(df,fylke_nr=='00'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_28_633d.csv", stringsAsFactors=FALSE,colClasses="character")
apply(subset(df,select=-tabellvariabel),2, function(x){levels(as.factor(x))})
apply(subset(df,select=-tabellvariabel),2, function(x){nlevels(as.factor(x))})
nrow(df)==83*9*2
t = subset(df,naringsregion_nr=='01'&enhet=='personer')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_25_633a.csv", stringsAsFactors=FALSE,colClasses="character")
t = subset(df,kommune_nr=='0000'&enhet=='prosent')
t = subset(df,kommune_nr=='0101'&enhet=='prosent')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_26_633b.csv", stringsAsFactors=FALSE,colClasses="character")
t = subset(df,bydel_nr=='030101'&enhet=='prosent')
df <- read.csv("~/Indikatorprosjektet/Indikatorer og datagrunnlag/Dataleveranser/Leveranse 2-2016 fra SSB/sysselsetting/DIAGNOSE/Tab_27_633c.csv", stringsAsFactors=FALSE,colClasses="character")
t = subset(df,fylke_nr=='00'&enhet=='prosent')
