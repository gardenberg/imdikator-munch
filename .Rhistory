levels(as.factor(ikke_arbutd_innvkat_land$kommune_nr))
levels(as.factor(ikke_arbutd_innvkat_land$innvkat_3))
levels(as.factor(ikke_arbutd_innvkat_land$vreg_3))
levels(as.factor(ikke_arbutd_innvkat_land$kjonn))
levels(as.factor(ikke_arbutd_innvkat_land$enhet))
#logisk sjekk
df=subset(ikke_arbutd_innvkat_land,aar=="2014")
nrow(df)==nlevels(as.factor(df[,2]))*3*3*3*2
#substanssjekk - populasjonen
df=subset(ikke_arbutd_innvkat_land,aar=="2014"&kommune_nr=="0000"&innvkat_3=="alle")
View(df)
df=subset(ikke_arbutd_innvkat_land,aar=="2013"&kommune_nr=="0000"&innvkat_3=="alle")
df=subset(ikke_arbutd_innvkat_land,aar=="2013"&kommune_nr=="0000"&vreg_3=="alle")
ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"])*100
View(ikke_arbutd_innvkat_land)
write.csv(ikke_arbutd_innvkat_land,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_land-kommune-2006_2014.csv",row.names=F)
#bydel
ikke_arbutd_innvkat_land <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_34_65b.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_land$bydel_nr))
levels(as.factor(ikke_arbutd_innvkat_land$bydel_nr))
levels(as.factor(ikke_arbutd_innvkat_land$innvkat_3))
levels(as.factor(ikke_arbutd_innvkat_land$kjonn))
levels(as.factor(ikke_arbutd_innvkat_land$vreg_3))
levels(as.factor(ikke_arbutd_innvkat_land$aar))
levels(as.factor(ikke_arbutd_innvkat_land$enhet))
#for testing i miljø
ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"])*100
write.csv(ikke_arbutd_innvkat_land,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_land-bydel-2006_2014.csv",row.names=F)
#fylke
ikke_arbutd_innvkat_land <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_35_65c.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_land$fylke_nr))
levels(as.factor(ikke_arbutd_innvkat_land$fylke_nr))
levels(as.factor(ikke_arbutd_innvkat_land$innvkat_3))
levels(as.factor(ikke_arbutd_innvkat_land$vreg_3))
levels(as.factor(ikke_arbutd_innvkat_land$kjonn))
levels(as.factor(ikke_arbutd_innvkat_land$aar))
levels(as.factor(ikke_arbutd_innvkat_land$enhet))
#for testing i miljø
ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"])*100
write.csv(ikke_arbutd_innvkat_land,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_land-fylke-2006_2014.csv",row.names=F)
#næringsregion
ikke_arbutd_innvkat_land <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_36_65d.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_land$naringsregion_nr))
levels(as.factor(ikke_arbutd_innvkat_land$naringsregion_nr))
levels(as.factor(ikke_arbutd_innvkat_land$innvkat_3))
levels(as.factor(ikke_arbutd_innvkat_land$kjonn))
levels(as.factor(ikke_arbutd_innvkat_land$vreg_3))
levels(as.factor(ikke_arbutd_innvkat_land$aar))
levels(as.factor(ikke_arbutd_innvkat_land$enhet))
#for testing i miljø
ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_land$tabellvariabel[ikke_arbutd_innvkat_land$enhet=="prosent"])*100
write.csv(ikke_arbutd_innvkat_land,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_land-naringsregion-2006_2014.csv",row.names=F)
ikke_arbutd_innvkat_alder <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_37_66a.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_alder$kommune_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$kommune_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$innvkat_3))
levels(as.factor(ikke_arbutd_innvkat_alder$aldersinndeling_etter_grskole))
levels(as.factor(ikke_arbutd_innvkat_alder$kjonn))
levels(as.factor(ikke_arbutd_innvkat_alder$enhet))
#logisk sjekk
df=subset(ikke_arbutd_innvkat_alder,aar=="2014")
nrow(df)==nlevels(as.factor(df[,2]))*3*3*3*2
#substanssjekk - populasjonen
df=subset(ikke_arbutd_innvkat_alder,aar=="2013"&kommune_nr=="0000"&innvkat_3=="innvandrere")
View(df)
df=subset(ikke_arbutd_innvkat_alder,aar=="2013"&kommune_nr=="0000"&aldersinndeling_etter_grskole=="alle")
View(df)
#ikke_arbutd_innvkat_alder
library(tidyr)
#kommune
ikke_arbutd_innvkat_alder <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_37_66a.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_alder$kommune_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$kommune_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$innvkat_3))
levels(as.factor(ikke_arbutd_innvkat_alder$aldersinndeling_etter_grskole))
levels(as.factor(ikke_arbutd_innvkat_alder$kjonn))
levels(as.factor(ikke_arbutd_innvkat_alder$enhet))
#logisk sjekk
df=subset(ikke_arbutd_innvkat_alder,aar=="2014")
nrow(df)==nlevels(as.factor(df[,2]))*3*3*3*2
#substanssjekk - populasjonen
df=subset(ikke_arbutd_innvkat_alder,aar=="2013"&kommune_nr=="0000"&innvkat_3=="innvandrere")
df=subset(ikke_arbutd_innvkat_alder,aar=="2013"&kommune_nr=="0000"&aldersinndeling_etter_grskole=="alle")
#for testing i miljø
ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"])*100
write.csv(ikke_arbutd_innvkat_alder,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_alder-kommune-2006_2014.csv",row.names=F)
#bydel
ikke_arbutd_innvkat_alder <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_38_66b.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_alder$bydel_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$bydel_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$innvkat_2))
levels(as.factor(ikke_arbutd_innvkat_alder$kjonn))
levels(as.factor(ikke_arbutd_innvkat_alder[,5]))
levels(as.factor(ikke_arbutd_innvkat_alder$aar))
levels(as.factor(ikke_arbutd_innvkat_alder$enhet))
#for testing i miljø
ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"])*100
write.csv(ikke_arbutd_innvkat_alder,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_alder-bydel-2006_2014.csv",row.names=F)
#fylke
ikke_arbutd_innvkat_alder <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_39_66c.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_alder$fylke_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$fylke_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$innvkat_2))
levels(as.factor(ikke_arbutd_innvkat_alder[,5]))
levels(as.factor(ikke_arbutd_innvkat_alder$kjonn))
levels(as.factor(ikke_arbutd_innvkat_alder$aar))
levels(as.factor(ikke_arbutd_innvkat_alder$enhet))
#for testing i miljø
ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"])*100
write.csv(ikke_arbutd_innvkat_alder,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_alder-fylke-2006_2014.csv",row.names=F)
#næringsregion
ikke_arbutd_innvkat_alder <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_40_66d.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(ikke_arbutd_innvkat_alder$naringsregion_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$naringsregion_nr))
levels(as.factor(ikke_arbutd_innvkat_alder$innvkat_2))
levels(as.factor(ikke_arbutd_innvkat_alder$kjonn))
levels(as.factor(ikke_arbutd_innvkat_alder$vreg_3))
levels(as.factor(ikke_arbutd_innvkat_alder$aar))
levels(as.factor(ikke_arbutd_innvkat_alder$enhet))
#for testing i miljø
ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"]=extract_numeric(ikke_arbutd_innvkat_alder$tabellvariabel[ikke_arbutd_innvkat_alder$enhet=="prosent"])*100
write.csv(ikke_arbutd_innvkat_alder,"D:/R/imdikator-munch/data_flat_output/ikke_arbutd_innvkat_alder-naringsregion-2006_2014.csv",row.names=F)
bosatt_befolkning <- read.csv("D:/R/imdikator-munch/data_flat_input/bosatt_befolkning-kommune-2015.csv", sep=";", stringsAsFactors=FALSE)
View(bosatt_befolkning)
bosatt_befolkning <- read.csv2("D:/R/imdikator-munch/data_flat_input/bosatt_befolkning-kommune-2015.csv", sep=";", stringsAsFactors=FALSE)
bosatt_befolkning <- read.csv("D:/R/imdikator-munch/data_flat_input/bosatt_befolkning-kommune-2015.csv", sep=";", stringsAsFactors=FALSE)
bosatt_befolkning <- read.csv1("D:/R/imdikator-munch/data_flat_input/bosatt_befolkning-kommune-2015.csv", sep=";", stringsAsFactors=FALSE)
bosatt_befolkning <- read.csv("D:/R/imdikator-munch/data_flat_input/bosatt_befolkning-kommune-2015.csv", sep=",",dec=".", stringsAsFactors=FALSE)
View(bosatt_befolkning)
bosatt_befolkning <- read.csv("D:/R/imdikator-munch/data_flat_input/bosatt_befolkning-kommune-2015.csv", sep=",",dec=".", stringsAsFactors=FALSE,colClasses="character")
View(bosatt_befolkning)
nlevels(as.factor(bosatt_befolkning))
nlevels(as.factor(bosatt_befolkning[,1]))
for(i in 6){
nlevels(as.factor(bosatt_befolkning[,i]))
}
return(nlevels(as.factor(bosatt_befolkning[,i])))
for(i in 6){
return(nlevels(as.factor(bosatt_befolkning[,i])))
}
nlevels(as.factor(bosatt_befolkning[,1]))
nlevels(as.factor(bosatt_befolkning[,2]))
nlevels(as.factor(bosatt_befolkning[,3]))
nlevels(as.factor(bosatt_befolkning[,4]))
nlevels(as.factor(bosatt_befolkning[,5]))
write.csv(bosatt_befolkning,"D:/R/imdikator-munch/data_flat_output/bosatt_befolkning-kommune-2015.csv",row.names=F)
sysselsatte_innvandringsgrunn <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_1_60a.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_innvandringsgrunn$kommune_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$kommune_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$innvgrunn_6))
levels(as.factor(sysselsatte_innvandringsgrunn$aar))
levels(as.factor(sysselsatte_innvandringsgrunn$enhet))
View(sysselsatte_innvandringsgrunn)
#logisk sjekk
df=subset(sysselsatte_innvandringsgrunn,aar=="2013")
nrow(df)==nlevels(as.factor(df[,2]))*7*3*2
#substanssjekk - populasjonen
df=subset(sysselsatte_innvandringsgrunn,aar=="2013"&kommune_nr=="0000"&kjonn=="alle"&enhet=="personer")
View(df)
df=subset(sysselsatte_innvandringsgrunn,aar=="2013"&kommune_nr=="0000"&kjonn=="alle"&enhet=="prosent")
sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"]=extract_numeric(sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"])*100
View(sysselsatte_innvandringsgrunn)
write.csv(sysselsatte_innvandringsgrunn,"D:/R/imdikator-munch/data_flat_output/sysselsatte_innvandringsgrunn-kommune-2006_2014.csv",row.names=F)
#bydel
sysselsatte_innvandringsgrunn <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_2_60b.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_innvandringsgrunn$bydel_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$bydel_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$innvgrunn_6))
levels(as.factor(sysselsatte_innvandringsgrunn$aar))
levels(as.factor(sysselsatte_innvandringsgrunn$enhet))
levels(as.factor(sysselsatte_innvandringsgrunn$kjonn))
#logisk sjekk
df=subset(sysselsatte_innvandringsgrunn,aar=="2013")
nrow(df)==nlevels(as.factor(df[,2]))*7*3*2
#for testing i testmiljø
sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"]=extract_numeric(sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"])*100
write.csv(sysselsatte_innvandringsgrunn,"D:/R/imdikator-munch/data_flat_output/sysselsatte_innvandringsgrunn-bydel-2006_2014.csv",row.names=F)
#fylke
sysselsatte_innvandringsgrunn <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_3_60c.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_innvandringsgrunn$fylke_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$fylke_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$innvgrunn_6))
levels(as.factor(sysselsatte_innvandringsgrunn$aar))
levels(as.factor(sysselsatte_innvandringsgrunn$enhet))
levels(as.factor(sysselsatte_innvandringsgrunn$kjonn))
sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$innvgrunn_6=="alle"&sysselsatte_innvandringsgrunn$fylke_nr=="00"&sysselsatte_innvandringsgrunn$enhet=="personer"&sysselsatte_innvandringsgrunn$kjonn=="alle"]
#for testing i testmiljø
sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"]=extract_numeric(sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"])*100
write.csv(sysselsatte_innvandringsgrunn,"D:/R/imdikator-munch/data_flat_output/sysselsatte_innvandringsgrunn-fylke-2006_2014.csv",row.names=F)
#næringsregion
sysselsatte_innvandringsgrunn <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_4_60d.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_innvandringsgrunn$naringsregion_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$naringsregion_nr))
levels(as.factor(sysselsatte_innvandringsgrunn$innvgrunn_6))
levels(as.factor(sysselsatte_innvandringsgrunn$aar))
levels(as.factor(sysselsatte_innvandringsgrunn$enhet))
levels(as.factor(sysselsatte_innvandringsgrunn$kjonn))
#for testing i testmiljø
sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"]=extract_numeric(sysselsatte_innvandringsgrunn$tabellvariabel[sysselsatte_innvandringsgrunn$enhet=="prosent"])*100
write.csv(sysselsatte_innvandringsgrunn,"D:/R/imdikator-munch/data_flat_output/sysselsatte_innvandringsgrunn-naringsregion-2006_2014.csv",row.names=F)
sysselsatte_botid_land <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_17_631a.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_botid_land$kommune_nr))
levels(as.factor(sysselsatte_botid_land$botid_5))
levels(as.factor(sysselsatte_botid_land$vreg_3))
levels(as.factor(sysselsatte_botid_land$aar))
levels(as.factor(sysselsatte_botid_land$enhet))
#logisk sjekk
df=subset(sysselsatte_botid_land,aar=="2014")
nrow(df)==nlevels(as.factor(df[,2]))*4*3*2
#substanssjekk - populasjonen
df=subset(sysselsatte_botid_land,aar=="2014"&kommune_nr=="0000"&botid_5=="alle"&vreg_3=="alle")
#substanssjekk - summering
df=subset(sysselsatte_botid_land,aar=="2014"&kommune_nr=="0000"&vreg_3=="alle"&enhet=="personer")
#for testing i miljø
sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"]=extract_numeric(sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"])*100
write.csv(sysselsatte_botid_land,"D:/R/imdikator-munch/data_flat_output/sysselsatte_botid_land-kommune-2006_2014.csv",row.names=F)
#bydel
sysselsatte_botid_land <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_18_631b.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_botid_land$bydel_nr))
levels(as.factor(sysselsatte_botid_land$bydel_nr))
levels(as.factor(sysselsatte_botid_land$botid_5))
levels(as.factor(sysselsatte_botid_land$vreg_3))
levels(as.factor(sysselsatte_botid_land$aar))
levels(as.factor(sysselsatte_botid_land$enhet))
#logisk sjekk
df=subset(sysselsatte_botid_land,aar=="2014")
nrow(df)==nlevels(as.factor(df[,2]))*4*3*2
#for testing i miljø
sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"]=extract_numeric(sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"])*100
write.csv(sysselsatte_botid_land,"D:/R/imdikator-munch/data_flat_output/sysselsatte_botid_land-bydel-2006_2014.csv",row.names=F)
#fylke
sysselsatte_botid_land <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_19_631c.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_botid_land$fylke_nr))
levels(as.factor(sysselsatte_botid_land$fylke_nr))
levels(as.factor(sysselsatte_botid_land$botid_5))
levels(as.factor(sysselsatte_botid_land$vreg_3))
levels(as.factor(sysselsatte_botid_land$aar))
levels(as.factor(sysselsatte_botid_land$enhet))
#logisk sjekk
df=subset(sysselsatte_botid_land,aar=="2014")
nrow(df)==nlevels(as.factor(df[,2]))*4*3*2
#for testing i miljø
sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"]=extract_numeric(sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"])*100
write.csv(sysselsatte_botid_land,"D:/R/imdikator-munch/data_flat_output/sysselsatte_botid_land-fylke-2006_2014.csv",row.names=F)
#naringsregion
sysselsatte_botid_land <- read.csv("D:/R/imdikator-munch/data_flat_input/diagnose/Tab_20_631d.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
nlevels(as.factor(sysselsatte_botid_land$naringsregion_nr))
levels(as.factor(sysselsatte_botid_land$naringsregion_nr))
levels(as.factor(sysselsatte_botid_land$botid_5))
levels(as.factor(sysselsatte_botid_land$vreg_3))
levels(as.factor(sysselsatte_botid_land$aar))
levels(as.factor(sysselsatte_botid_land$enhet))
#logisk sjekk
df=subset(sysselsatte_botid_land,aar=="2014")
nrow(df)==nlevels(as.factor(df[,2]))*4*3*2
#for testing i miljø
sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"]=extract_numeric(sysselsatte_botid_land$tabellvariabel[sysselsatte_botid_land$enhet=="prosent"])*100
write.csv(sysselsatte_botid_land,"D:/R/imdikator-munch/data_flat_output/sysselsatte_botid_land-naringsregion-2006_2014.csv",row.names=F)
dato = "160315"
data = read.csv(paste0("D:/R/imdikator-munch/data_crossed_input/bosatt_anmodede-kommune-2016-",dato,".csv"), row.names=NULL, na.strings=c("NA",":","."), stringsAsFactors=FALSE, sep=";", dec=",")
#KOMMUNE 2016
bosatt_anmodede = data
names(bosatt_anmodede)=c("kommune_nr","aar", "anmodning_personer","vedtak_personer","bosatt_personer")
checksum = sum(bosatt_anmodede$vedtak_personer,na.rm=T)
bosatt_anmodede$anmodning_prosent = bosatt_anmodede$anmodning_personer/bosatt_anmodede$anmodning_personer*100
bosatt_anmodede$vedtak_prosent = bosatt_anmodede$vedtak_personer/bosatt_anmodede$anmodning_personer*100
bosatt_anmodede$bosatt_prosent = bosatt_anmodede$bosatt_personer/bosatt_anmodede$anmodning_personer*100
df = gather(bosatt_anmodede,variables,tabellvariabel,3:8)
df = separate(df,variables,into=c("bosetting","enhet"),sep="_")
nlevels(as.factor(df$kommune_nr))==428
#i anmodnings- og vedtakstall på kommunenivå 2015-2017 er bosetting manglende, anmodning ikke : eller . men 0, og vedtak enten 0 eller ".".
df$tabellvariabel[df$bosetting=="bosatt"&is.na(df$tabellvariabel)==T]="."
df$tabellvariabel[df$bosetting=="anmodning"&is.na(df$tabellvariabel)==T]=0
df$tabellvariabel[df$bosetting=="vedtak"&is.na(df$tabellvariabel)==T]="."
checksum == sum(as.numeric(df$tabellvariabel[df$bosetting=="vedtak"&df$enhet=="personer"]),na.rm=T)
#logisk sjekk
nrow(df)==428*3*2
#resterende
df$tabell_navn="bosatt_anmodede"
df$kommune_nr[nchar(df$kommune_nr)==3] = paste0("0",df$kommune_nr[nchar(df$kommune_nr)==3])
write.csv(df,paste0("D:/R/imdikator-munch/data_flat_output/bosatt_anmodede-kommune-2016-",dato,".csv"),row.names=F)
#FYLKE 2016
kinfo = read.csv("D:/R/imdikator-munch/parameters/kommunesort.csv", sep=";", stringsAsFactors=FALSE)
kinfo = subset(kinfo,select=c("Nr","Fylkenr"))
names(kinfo)[2] = "fylke_nr"
kinfo$fylke_nr[nchar(kinfo$fylke_nr)==1] = paste0("0",kinfo$fylke_nr[nchar(kinfo$fylke_nr)==1])
#bosettingsdata spesielt og data for aggregering generelt skal ikke leses inn som character, men med NA.strings ="."&":"
#logikken er at det ikke er : på dette nivået, fordi tallene skal aggregeres - det er bare missing
#og hvis det er ":", så skal disse uansett bli . på aggregert n ivå
bosatt_anmodede = data
checksum_start = sum(bosatt_anmodede$bosetting.vedtak[bosatt_anmodede$aar==2016],na.rm=T)
sum(is.na(bosatt_anmodede$bosetting.bosatt)==T)
bosatt_anmodede$bosetting.bosatt[is.na(bosatt_anmodede$bosetting.bosatt)==T]=0
sum(is.na(bosatt_anmodede$bosetting.anmodning)==T)
bosatt_anmodede$bosetting.anmodning[is.na(bosatt_anmodede$bosetting.anmodning)==T]=0
sum(is.na(bosatt_anmodede$bosetting.vedtak)==T)
bosatt_anmodede$bosetting.vedtak[is.na(bosatt_anmodede$bosetting.vedtak)==T]=0
df = merge(bosatt_anmodede,kinfo,by.x="kommune_nr",by.y ="Nr",all.x=T,all.y=T)
bosatt_anmodede_m = melt.data.frame(df,id.vars=c("kommune_nr","fylke_nr","aar"),na.rm=F)
bosatt_anmodede_fylke = cast(bosatt_anmodede_m,fylke_nr~variable,fun.aggregate=sum,na.rm=T,add.missing=T,margins="grand_row")
bosatt_anmodede_fylke = subset(bosatt_anmodede_fylke,select=-5)
checksum_start == sum(bosatt_anmodede_fylke$bosetting.vedtak)/2
names(bosatt_anmodede_fylke)=c("fylke_nr","anmodning_personer_2016","vedtak_personer_2016","bosatt_personer_2016")
bosatt_anmodede_fylke$anmodning_prosent_2016 = (as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016)/as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016))*100
bosatt_anmodede_fylke$vedtak_prosent_2016 = (as.numeric(bosatt_anmodede_fylke$vedtak_personer_2016)/as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016))*100
bosatt_anmodede_fylke$bosatt_prosent_2016 = (as.numeric(bosatt_anmodede_fylke$bosatt_personer_2016)/as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016))*100
df = gather(bosatt_anmodede_fylke,"variabler","tabellvariabel",-1)
df = separate(df,variabler,c("bosetting","enhet","aar"),sep="_")
sum(is.na(df$tabellvariabel)==T)
df$tabellvariabel[is.na(df$tabellvariabel)==T]="."
#logisk sjekk
nrow(df)==21*3*2
#.==regexp any single character
df$fylke_nr = gsub(".all.","00",df$fylke_nr)
checksum_start==df$tabellvariabel[df$fylke_nr=="00"&df$bosetting=="vedtak"&df$aar=="2016"&df$enhet=="personer"]
#resterende
df$tabell_navn="bosatt_anmodede"
df$tabellvariabel[df$bosetting=="bosatt"]="."
write.csv(df,paste0("D:/R/imdikator-munch/data_flat_output/bosatt_anmodede-fylke-2016-",dato,".csv"),row.names=F)
#Næringsregion 2016
kinfo <- read.csv("D:/R/imdikator-munch/parameters/kommunesort.csv", sep=";", stringsAsFactors=FALSE)
kinfo = subset(kinfo,select=c("Nr","Naringregnr"))
names(kinfo)[2] = "naringsregion_nr"
kinfo$naringsregion_nr[nchar(kinfo$naringsregion_nr)==1] = paste0("0",kinfo$naringsregion_nr[nchar(kinfo$naringsregion_nr)==1])
#bosettingsdata spesielt og data for aggregering generelt skal ikke leses inn som character, men med NA.strings ="."&":"
#logikken er at det ikke er : på dette nivået, fordi tallene skal aggregeres - det er bare missing
#og hvis det er ":", så skal disse uansett bli . på aggregert n ivå
bosatt_anmodede = data
checksum_start = sum(bosatt_anmodede$bosetting.vedtak[bosatt_anmodede$aar==2016],na.rm=T)
sum(is.na(bosatt_anmodede$bosetting.bosatt)==T)
bosatt_anmodede$bosetting.bosatt[is.na(bosatt_anmodede$bosetting.bosatt)==T]=0
sum(is.na(bosatt_anmodede$bosetting.anmodning)==T)
bosatt_anmodede$bosetting.anmodning[is.na(bosatt_anmodede$bosetting.anmodning)==T]=0
sum(is.na(bosatt_anmodede$bosetting.vedtak)==T)
bosatt_anmodede$bosetting.vedtak[is.na(bosatt_anmodede$bosetting.vedtak)==T]=0
df = merge(bosatt_anmodede,kinfo,by.x="kommune_nr",by.y ="Nr",all.x=T,all.y=T)
library(reshape)
bosatt_anmodede_m = melt.data.frame(df,id.vars=c("kommune_nr","naringsregion_nr","aar"),na.rm=F)
bosatt_anmodede_naringsregion = cast(bosatt_anmodede_m,naringsregion_nr~variable,fun.aggregate=sum,na.rm=T)
checksum_start == sum(bosatt_anmodede_naringsregion$bosetting.vedtak)
names(bosatt_anmodede_naringsregion)=c("naringsregion_nr","anmodning_personer_2016","vedtak_personer_2016","bosatt_personer_2016")
bosatt_anmodede_naringsregion$anmodning_prosent_2016 = (as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016)/as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016))*100
bosatt_anmodede_naringsregion$vedtak_prosent_2016 = (as.numeric(bosatt_anmodede_naringsregion$vedtak_personer_2016)/as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016))*100
bosatt_anmodede_naringsregion$bosatt_prosent_2016 = (as.numeric(bosatt_anmodede_naringsregion$bosatt_personer_2016)/as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016))*100
df = gather(bosatt_anmodede_naringsregion,"variabler","tabellvariabel",-1)
df = separate(df,variabler,c("bosetting","enhet","aar"),sep="_")
sum(is.na(df$tabellvariabel)==T)
df$tabellvariabel[is.na(df$tabellvariabel)==T]="."
#logisk sjekk
nrow(df)==84*3*2
#resterende
df$tabell_navn="bosatt_anmodede"
df$tabellvariabel[df$bosetting=="bosatt"]="."
write.csv(df,paste0("D:/R/imdikator-munch/data_flat_output/bosatt_anmodede-naringsregion-2016-",dato,".csv"),row.names=F)
library(tidyr)
library(reshape)
dato = "160315"
data = read.csv(paste0("D:/R/imdikator-munch/data_crossed_input/bosatt_anmodede-kommune-2016-",dato,".csv"), row.names=NULL, na.strings=c("NA",":","."), stringsAsFactors=FALSE, sep=";", dec=",")
#biblioteker
library(tidyr)
library(reshape)
#KOMMUNE 2016
bosatt_anmodede = data
names(bosatt_anmodede)=c("kommune_nr","aar", "anmodning_personer","vedtak_personer","bosatt_personer")
checksum = sum(bosatt_anmodede$vedtak_personer,na.rm=T)
bosatt_anmodede$anmodning_prosent = bosatt_anmodede$anmodning_personer/bosatt_anmodede$anmodning_personer*100
bosatt_anmodede$vedtak_prosent = bosatt_anmodede$vedtak_personer/bosatt_anmodede$anmodning_personer*100
bosatt_anmodede$bosatt_prosent = bosatt_anmodede$bosatt_personer/bosatt_anmodede$anmodning_personer*100
df = gather(bosatt_anmodede,variables,tabellvariabel,3:8)
df = separate(df,variables,into=c("bosetting","enhet"),sep="_")
nlevels(as.factor(df$kommune_nr))==428
#i anmodnings- og vedtakstall på kommunenivå 2015-2017 er bosetting manglende, anmodning ikke : eller . men 0, og vedtak enten 0 eller ".".
df$tabellvariabel[df$bosetting=="bosatt"&is.na(df$tabellvariabel)==T]="."
df$tabellvariabel[df$bosetting=="anmodning"&is.na(df$tabellvariabel)==T]=0
df$tabellvariabel[df$bosetting=="vedtak"&is.na(df$tabellvariabel)==T]="."
checksum == sum(as.numeric(df$tabellvariabel[df$bosetting=="vedtak"&df$enhet=="personer"]),na.rm=T)
#logisk sjekk
nrow(df)==428*3*2
#resterende
df$tabell_navn="bosatt_anmodede"
df$kommune_nr[nchar(df$kommune_nr)==3] = paste0("0",df$kommune_nr[nchar(df$kommune_nr)==3])
write.csv(df,paste0("D:/R/imdikator-munch/data_flat_output/bosatt_anmodede-kommune-2016-",dato,".csv"),row.names=F)
#FYLKE 2016
kinfo = read.csv("D:/R/imdikator-munch/parameters/kommunesort.csv", sep=";", stringsAsFactors=FALSE)
kinfo = subset(kinfo,select=c("Nr","Fylkenr"))
names(kinfo)[2] = "fylke_nr"
kinfo$fylke_nr[nchar(kinfo$fylke_nr)==1] = paste0("0",kinfo$fylke_nr[nchar(kinfo$fylke_nr)==1])
#bosettingsdata spesielt og data for aggregering generelt skal ikke leses inn som character, men med NA.strings ="."&":"
#logikken er at det ikke er : på dette nivået, fordi tallene skal aggregeres - det er bare missing
#og hvis det er ":", så skal disse uansett bli . på aggregert n ivå
bosatt_anmodede = data
checksum_start = sum(bosatt_anmodede$bosetting.vedtak[bosatt_anmodede$aar==2016],na.rm=T)
sum(is.na(bosatt_anmodede$bosetting.bosatt)==T)
bosatt_anmodede$bosetting.bosatt[is.na(bosatt_anmodede$bosetting.bosatt)==T]=0
sum(is.na(bosatt_anmodede$bosetting.anmodning)==T)
bosatt_anmodede$bosetting.anmodning[is.na(bosatt_anmodede$bosetting.anmodning)==T]=0
sum(is.na(bosatt_anmodede$bosetting.vedtak)==T)
bosatt_anmodede$bosetting.vedtak[is.na(bosatt_anmodede$bosetting.vedtak)==T]=0
df = merge(bosatt_anmodede,kinfo,by.x="kommune_nr",by.y ="Nr",all.x=T,all.y=T)
bosatt_anmodede_m = melt.data.frame(df,id.vars=c("kommune_nr","fylke_nr","aar"),na.rm=F)
bosatt_anmodede_fylke = cast(bosatt_anmodede_m,fylke_nr~variable,fun.aggregate=sum,na.rm=T,add.missing=T,margins="grand_row")
bosatt_anmodede_fylke = subset(bosatt_anmodede_fylke,select=-5)
checksum_start == sum(bosatt_anmodede_fylke$bosetting.vedtak)/2
names(bosatt_anmodede_fylke)=c("fylke_nr","anmodning_personer_2016","vedtak_personer_2016","bosatt_personer_2016")
bosatt_anmodede_fylke$anmodning_prosent_2016 = (as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016)/as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016))*100
bosatt_anmodede_fylke$vedtak_prosent_2016 = (as.numeric(bosatt_anmodede_fylke$vedtak_personer_2016)/as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016))*100
bosatt_anmodede_fylke$bosatt_prosent_2016 = (as.numeric(bosatt_anmodede_fylke$bosatt_personer_2016)/as.numeric(bosatt_anmodede_fylke$anmodning_personer_2016))*100
df = gather(bosatt_anmodede_fylke,"variabler","tabellvariabel",-1)
df = separate(df,variabler,c("bosetting","enhet","aar"),sep="_")
sum(is.na(df$tabellvariabel)==T)
df$tabellvariabel[is.na(df$tabellvariabel)==T]="."
#logisk sjekk
nrow(df)==21*3*2
#.==regexp any single character
df$fylke_nr = gsub(".all.","00",df$fylke_nr)
checksum_start==df$tabellvariabel[df$fylke_nr=="00"&df$bosetting=="vedtak"&df$aar=="2016"&df$enhet=="personer"]
#resterende
df$tabell_navn="bosatt_anmodede"
df$tabellvariabel[df$bosetting=="bosatt"]="."
write.csv(df,paste0("D:/R/imdikator-munch/data_flat_output/bosatt_anmodede-fylke-2016-",dato,".csv"),row.names=F)
#Næringsregion 2016
kinfo <- read.csv("D:/R/imdikator-munch/parameters/kommunesort.csv", sep=";", stringsAsFactors=FALSE)
kinfo = subset(kinfo,select=c("Nr","Naringregnr"))
names(kinfo)[2] = "naringsregion_nr"
kinfo$naringsregion_nr[nchar(kinfo$naringsregion_nr)==1] = paste0("0",kinfo$naringsregion_nr[nchar(kinfo$naringsregion_nr)==1])
#bosettingsdata spesielt og data for aggregering generelt skal ikke leses inn som character, men med NA.strings ="."&":"
#logikken er at det ikke er : på dette nivået, fordi tallene skal aggregeres - det er bare missing
#og hvis det er ":", så skal disse uansett bli . på aggregert n ivå
bosatt_anmodede = data
checksum_start = sum(bosatt_anmodede$bosetting.vedtak[bosatt_anmodede$aar==2016],na.rm=T)
sum(is.na(bosatt_anmodede$bosetting.bosatt)==T)
bosatt_anmodede$bosetting.bosatt[is.na(bosatt_anmodede$bosetting.bosatt)==T]=0
sum(is.na(bosatt_anmodede$bosetting.anmodning)==T)
bosatt_anmodede$bosetting.anmodning[is.na(bosatt_anmodede$bosetting.anmodning)==T]=0
sum(is.na(bosatt_anmodede$bosetting.vedtak)==T)
bosatt_anmodede$bosetting.vedtak[is.na(bosatt_anmodede$bosetting.vedtak)==T]=0
df = merge(bosatt_anmodede,kinfo,by.x="kommune_nr",by.y ="Nr",all.x=T,all.y=T)
library(reshape)
bosatt_anmodede_m = melt.data.frame(df,id.vars=c("kommune_nr","naringsregion_nr","aar"),na.rm=F)
bosatt_anmodede_naringsregion = cast(bosatt_anmodede_m,naringsregion_nr~variable,fun.aggregate=sum,na.rm=T)
checksum_start == sum(bosatt_anmodede_naringsregion$bosetting.vedtak)
names(bosatt_anmodede_naringsregion)=c("naringsregion_nr","anmodning_personer_2016","vedtak_personer_2016","bosatt_personer_2016")
bosatt_anmodede_naringsregion$anmodning_prosent_2016 = (as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016)/as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016))*100
bosatt_anmodede_naringsregion$vedtak_prosent_2016 = (as.numeric(bosatt_anmodede_naringsregion$vedtak_personer_2016)/as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016))*100
bosatt_anmodede_naringsregion$bosatt_prosent_2016 = (as.numeric(bosatt_anmodede_naringsregion$bosatt_personer_2016)/as.numeric(bosatt_anmodede_naringsregion$anmodning_personer_2016))*100
df = gather(bosatt_anmodede_naringsregion,"variabler","tabellvariabel",-1)
df = separate(df,variabler,c("bosetting","enhet","aar"),sep="_")
sum(is.na(df$tabellvariabel)==T)
df$tabellvariabel[is.na(df$tabellvariabel)==T]="."
#logisk sjekk
nrow(df)==84*3*2
#resterende
df$tabell_navn="bosatt_anmodede"
df$tabellvariabel[df$bosetting=="bosatt"]="."
write.csv(df,paste0("D:/R/imdikator-munch/data_flat_output/bosatt_anmodede-naringsregion-2016-",dato,".csv"),row.names=F)
library(tidyr)
voksne_videregaende <- read.csv("D:/R/imdikator-munch/data_flat_input/tab36_2012.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
View(voksne_videregaende)
nlevels(as.factor(sysselsatte_land$kommune_nr))
nlevels(as.factor(voksne_videregaende$kommune_nr))
levels(as.factor(voksne_videregaende$fylke_nr))
levels(as.factor(voksne_videregaende$naringsregion_nr))
levels(as.factor(voksne_videregaende$bydel_nr))
levels(as.factor(voksne_videregaende$invkat_3))
names(voksne_videregaende[7])
names(voksne_videregaende)[7]="innvkat_3"
levels(as.factor(voksne_videregaende$kjonn))
levels(as.factor(voksne_videregaende$enhet))
levels(as.factor(voksne_videregaende$aar))
voksne_videregaende$aar = "2013"
nrow(voksne_videregaende)==(3*3*2*426)+(3*3*2*21)+(3*3*2*84)+(3*3*2*19)
(3*3*2*426)+(3*3*2*21)+(3*3*2*84)+(3*3*2*19)
levels(as.factor(voksne_videregaende$fylke_nr))
nrow(voksne_videregaende)==(3*3*2*425)+(3*3*2*20)+(3*3*2*83)+(3*3*2*18)
(3*3*2*425)+(3*3*2*20)+(3*3*2*83)+(3*3*2*18)
nrow(voksne_videregaende[voksne_videregaende$kommune_nr!="NULL"])==(3*3*2*425)
nrow(voksne_videregaende[voksne_videregaende$kommune_nr!="NULL"])==(3*3*2*425)
nrow(voksne_videregaende[voksne_videregaende$kommune_nr=="NULL"])==(3*3*2*425)
voksne_videregaende$kommune_nr
voksne_videregaende[voksne_videregaende$kommune_nr=="NULL"]
nrow(subset(voksne_videregaende,kommune_nr=="NULL"]))==(3*3*2*425)
nrow(subset(voksne_videregaende,kommune_nr=="NULL"))==(3*3*2*425)
nrow(subset(voksne_videregaende,kommune_nr=="NULL"))==(3*3*2*425)
nrow(subset(voksne_videregaende,kommune_nr=="NULL"))
nrow(subset(voksne_videregaende,kommune_nr!="NULL"))==(3*3*2*425)
nrow(subset(voksne_videregaende,kommune_nr!="NULL"))
(3*3*2*425)
nrow(subset(voksne_videregaende,fylke_nr!="NULL"))==(3*3*2*20)
nrow(subset(voksne_videregaende,naringsregion_nr!="NULL"))==(3*3*2*83)
nrow(subset(voksne_videregaende,bydel_nr!="NULL"))==(3*3*2*18)
write.csv(voksne_videregaende,"D:/R/imdikator-munch/data_flat_output/voksne_videregaende-alle-2013.csv",row.names=F)
voksne_videregaende <- read.csv("D:/R/imdikator-munch/data_flat_input/tab36_2013.csv", row.names=NULL, na.strings="NA", stringsAsFactors=FALSE, sep=",", dec=".",colClasses="character")
names(voksne_videregaende)[7]="innvkat_3"
nlevels(as.factor(voksne_videregaende$kommune_nr))
levels(as.factor(voksne_videregaende$naringsregion_nr))
levels(as.factor(voksne_videregaende$fylke_nr))
levels(as.factor(voksne_videregaende$bydel_nr))
levels(as.factor(voksne_videregaende$innvkat_3))
levels(as.factor(voksne_videregaende$kjonn))
nlevels(as.factor(voksne_videregaende$naringsregion_nr))
nlevels(as.factor(voksne_videregaende$fylke_nr))
nlevels(as.factor(voksne_videregaende$bydel_nr))
levels(as.factor(voksne_videregaende$fylke_nr))
levels(as.factor(voksne_videregaende$innvkat_3))
levels(as.factor(voksne_videregaende$kjonn))
levels(as.factor(voksne_videregaende$aar))
voksne_videregaende$aar = "2014"
nrow(subset(voksne_videregaende,kommune_nr!="NULL"))==(3*3*2*425)
nrow(subset(voksne_videregaende,fylke_nr!="NULL"))==(3*3*2*20)
nrow(subset(voksne_videregaende,naringsregion_nr!="NULL"))==(3*3*2*83)
nrow(subset(voksne_videregaende,bydel_nr!="NULL"))==(3*3*2*18)
write.csv(voksne_videregaende,"D:/R/imdikator-munch/data_flat_output/voksne_videregaende-alle-2014.csv",row.names=F)
